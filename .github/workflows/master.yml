name: Lint, Unit Tests & Build Master

on:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  NODE_VERSION: 22

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint check
        run: npm run lint:check

      - name: Run Prettier check
        run: npm run format:check

  unit-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

  build:
    name: Production Build
    runs-on: ubuntu-latest
    needs: [code-quality, unit-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build

  ci-success:
    name: CI Pipeline Success
    runs-on: ubuntu-latest
    needs: [code-quality, unit-tests, build]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.code-quality.result }}" != "success" || 
                "${{ needs.unit-tests.result }}" != "success" || 
                "${{ needs.build.result }}" != "success" ]]; then
            echo "❌ One or more CI jobs failed"
            exit 1
          else
            echo "✅ All CI jobs completed successfully"
          fi
